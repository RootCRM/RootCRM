<% include include/main-header %>

<link rel="stylesheet" href="css/basictable.css">
<link rel="stylesheet" href="plugins/combobox/autocomplete-ui.css"/>
<link rel="stylesheet" href="css/jquery.tag-editor.css">
<style>
	.custom-combobox {
		position: relative;
		display: inline-block;
	}
	.custom-combobox-toggle {
		position: absolute;
		top: 0;
		bottom: 0;
		margin-left: -1px;
		padding: 0;
	}
	.custom-combobox-input {
		margin: 0;
		padding: 5px 10px;
	}
	.ui-widget-overlay {
		position: fixed;
	}
	.ui-widget{
		z-index: 99999 !important;
	}
</style>
</head>
<body class="hold-transition skin-blue sidebar-mini">
	<div class="wrapper">	
   		<!-- Header Starts here-->
  		<% include include/header %>
  		<!-- Header Ends here-->
  		
  		<!-- Sidebar Starts Here-->
  			<% include include/sidebar %>
    	<!-- Sidebar Ends Here-->
		<div class="content-wrapper">
    	  	<!-- Content Header (Page header) -->
    		<section class="content-header">
      			<h1>Team <small><% if (typeof contentObj.name !== 'undefined' && contentObj.name !== null) { %><%= contentObj.name %><% } else{	%>Add new<% }%></small></h1>
      			<ol class="breadcrumb">
        			<li><a href="<%= backendDirectory %>/index"><i class="fa fa-dashboard"></i> Home</a></li>
        			<li class="active">Team</li>
      			</ol>
    		</section>	
    		<section class="content">
      			<div class="row">
      		<% if (typeof queryStr !== 'undefined' && queryStr !== null) {
    				if(queryStr.error_msg) {	%>
			<div class="col-sm-12"><div class="alert alert-danger alert-dismissable">
             	<button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                	<%= queryStr.error_msg %>
            </div> </div>
            <% }
           		if(queryStr.success_msg) {	%>
					<div class="col-sm-12"><div class="alert alert-success alert-dismissable">
             		<button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                		<%= queryStr.success_msg %>
            		</div></div>
            <%	}
            }	%>
            				<div class="panel-body no-padding-top bg-white"> 
            					
            					<form class="form-horizontal" action="<%= backendDirectory %>/save/team" method="POST" id="contentForm">
            						<input type="hidden" class="form-control" id="table_name" name="table_name" value="teams">
      								<input type="hidden" class="form-control" id="unique_field" name="unique_field" value="name">
      								<input type="hidden" class="form-control" id="id" name="id" value="<% if (typeof contentObj._id !== 'undefined' && contentObj._id !== null) { %><%= contentObj._id %><% } %>">
      								<input type="hidden" class="form-control" id="editorField" name="editorField" value="<% if (typeof editorField !== 'undefined' && editorField !== null) { %><%= editorField %><% }else{ %>_id<% } %>">
      								<input type="hidden" class="form-control" id="editorValue" name="editorValue" value="<% if (typeof editorValue !== 'undefined' && editorValue !== null) { %><%= editorValue %><% } %>">
            						<input type="hidden" class="form-control" id="data" name="data" value="">
            						
            						<div class="form-group">
                  						<label class="control-label col-md-2" for="first-name">Name<span class="required">*</span></label>
                  						<div class="col-md-6 col-lg-4">
                    						<input type="text" required="required" id="name" name="name" class="form-control col-md-5 col-xs-12" value="<% if (typeof contentObj.name !== 'undefined' && contentObj.name !== null) { %><%= contentObj.name %><% } %>">
                  						</div>
                					</div>
                					<input type="hidden" class="form-control" id="players" name="players" value="">
                					
              						<div class="form-group">
                  						<label class="control-label col-md-2" for="first-name">Players</label>
                  						<div class="col-md-10">
                  							<div class="table-responsive table-full-width">
		 										<div class="table-responsive" style="border:none;" >
                                					<table class="table table-striped  table-bordered table-hover custom-tbl-st bt" id="table-breakpoint"  style="background-color: rgb(255, 255, 255); border-radius: 4px;" >
                                						<thead>
                                       						<th>Player name</th>
                                       						<th>Email</th>
                                       						<th>Qualities</th>
                                       						<th>Batting Order</th>
                                       						<th>Bowling Order</th>
                                       						<th>Details</th>
                                    					</thead>
                                   						<tbody id="documents_data">
                                    	
                                    					</tbody>
                                					</table>
                   								</div>
											</div>
                  						</div>
                  					</div>
                  					<div class="form-group">
                  						<label class="control-label col-md-2" for="first-name">&nbsp;</label>
                  						<div class="col-md-10">
                  							<button type="button" class="btn btn-primary btn-color margin-right-5 btn-sm" data-toggle="modal" data-target="#addPlayer">Add players to team</button>
										</div>
                  					</div>
                  					<div class="form-group">
    									<label for="" class="col-sm-2 control-label">Status</label>
    									<div class="col-sm-9" style="margin-top:6px;">
    										<div STYLE="margin-right:10px;display:inline-block;">
      		  									<label> <input type="radio" id="status" name="status" value="1" <% if (typeof contentObj.status !== 'undefined' && contentObj.status !== null && contentObj.status == 1) { %>checked<% } %> > <strong style="font-weight:600">Active</strong></label>
    			  							</div>
				  							<div STYLE="display:inline-block;">
      		  									<label> <input type="radio" id="status" name="status" value="0" <% if (typeof contentObj.status !== 'undefined' && contentObj.status !== null && contentObj.status == 0) { %>checked<% } %> > <strong style="font-weight:600">Inactive</strong></label>
    			  							</div>
										</div>
									</div>
                					<div class="form-group">
                   						<div class="col-md-9 col-lg-6" align="CENTER">
               								<div class="submit-btn-setting"> <button type="submit" class="btn btn-primary btn-color margin-right-5 btn-sm">Submit</button>
               								<% if (typeof contentObj._id !== 'undefined' && contentObj._id !== null) {	%>
               									<a href="<%= backendDirectory %>/list/teams" class="btn btn-danger btn-sm">Cancel</a>
               								<%	}else{	%>
               									<button type="reset" class="btn btn-danger btn-sm">Reset</button>
               								<% } %>
               								</div>
               							</div>
                					</div>
              					</form>
              				</div>
            	</div>
      		</section>
    		<!--//body content--> 
  		</div>
  		<!--//Main Content--> 
	
		<!-- Footer Starts Here-->
			<% include include/footer %>
		<!-- Footer Ends Here-->

<div id="addPlayer" class="modal fade" role="dialog" style="display: none;" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<!-- Modal content-->
    	<div class="modal-content">
     		<div class="modal-header">
        		<button type="button" class="close" data-dismiss="modal" onClick="$('#user_id').val(''); clearModalBox();">×</button>
        		<h3 class="modal-title">Add player to team</h3>
      		</div>
      		<div class="modal-body">
       				<div class="row">
        				<div class="col-md-12" id="n_msg_err" style="color:#FF0000;"></div>
        				<div class="col-md-12" id="n_msg_suc" style="color:#006600;"></div>
        			</div>
					<div class="row">
						<div class="col-md-12 ui-widget">
                   			<select class="combobox form-control" id="user_id" >
                             					
							</select>
						</div>
						
					</div>
      		</div>
      		<div class="modal-footer">
      			<button type="button" class="btn btn-info sm-btn" onclick="add_newPlayer();">Add new</button>
      			<button type="button" class="btn btn-default" data-dismiss="modal" onClick="$('#user_id').val(''); clearModalBox();">Close</button>
      		</div>
    	</div>
	</div>
</div>

</div>
<!-- Page-Level Plugin Scripts-->

<script src="js/basictable.js"></script>
<script src="js/jquery.validate.js"></script>
<script src="plugins/combobox/autocomplete-ui.js"></script>
<script src="js/jquery.tag-editor.min.js"></script>

<script src="js/jquery.caret.min.js"></script>
<script>

var loadDefinedPlayertypes= new Array();
function clearModalBox(){
	$("#n_msg_err").html('');
	$("#n_msg_suc").html('');
	$('.ui-autocomplete-input').val("");
	loadPlayers();
}

function add_newPlayer(){
	$(".alert-messages").remove();
	var selectedUserStr=$("#user_id").val();
	if(selectedUserStr!=""){
		var jsonRow=backendDirectory+"/collection_details?collection=users&id="+selectedUserStr;
		$.getJSON(jsonRow,function(html){
			if(html.aaData){
				var row=html.aaData;
				var uniqueIDStr=row._id;
				var battingOrderNum=1, bowlingOrderNum=1, row_uuid=guid(), checkForExistence=false;
				
				$('.teamsTRClass').each(function(){
					if(uniqueIDStr==$(this).find('#user_uuid').val()){
						checkForExistence=true;
					}else{
						if(battingOrderNum<=$(this).find('#batting_order').val()){
							battingOrderNum=parseInt($(this).find('#batting_order').val())+1;
						}
						if(bowlingOrderNum<=$(this).find('#bowling_order').val()){
							bowlingOrderNum=parseInt($(this).find('#bowling_order').val())+1;
						}
					}
  				});
  				
  				if(checkForExistence){
  					$("#n_msg_err").html('This player is already in team!');
  				}else{
					contentHtml="<tr class='teamsTRClass' id='tr_"+uniqueIDStr+"'>";
					contentHtml+='<td>'+row.firstname+' '+row.lastname+'</td>';
					contentHtml+='<td>'+row.email+'</td>';
					//contentHtml+='<td>'+row.player_qualities+'</td>';
					contentHtml+='<td><textarea id="user_roles" class="form-control selected_qualities">'+row.player_qualities+'</textarea></td>';
						
					contentHtml+='<td><input id="batting_order" value="'+battingOrderNum+'" class="form-control" type="text"><input type="hidden" id="uuid" value="'+row_uuid+'"><input type="hidden" id="user_uuid" value="'+row._id+'"></td>';
					contentHtml+='<td><input id="bowling_order" value="'+bowlingOrderNum+'" class="form-control" type="text"></td>';
					contentHtml+='<td class="actions-list"><a href="user?_id='+uniqueIDStr+'" title="View player details" target="_blank"><i class="fa fa-link"></i></a>&nbsp;<a href="javascript:void(0)" onClick="removeItem(\''+uniqueIDStr+'\')" title="Remove"><i class="fa fa-trash"></i></a></td>';
					contentHtml+="</tr>";
					$("#documents_data").append(contentHtml);
					
					$("#addPlayer").modal('hide');
					clearModalBox();
					$('#table-breakpoint').basictable({
        				breakpoint: 751
     				});
     				
     				$('.selected_qualities').tagEditor('destroy');

     				$('.selected_qualities').tagEditor({
     					autocomplete: {
       						delay: 0, // show suggestions immediately
        					position: { collision: 'flip' }, // automatic menu position up/down
        					source: loadDefinedPlayertypes
    					},
    					forceLowercase: false,
    					placeholder: 'Add Qualities',
    					beforeTagSave: function(field, editor, tags, tag, val) {
    						if($.inArray( val, loadDefinedPlayertypes)==-1){
    							generate_new_player_type(val);
        					}
    					}
					});
				}
			}else{
				$("#n_msg_err").html('No such player found!');
			}
		});
	}	else{	
		$("#n_msg_err").html('Please select player to add to team');
	}
}

function generateObjectJson(){
	var createArr=new Array();
	var i=0;
	$('.teamsTRClass').each(function(){
		var createObject={};
		createObject['uuid']=$(this).find('#uuid').val();
  		createObject['user_mongo_id']=$(this).find('#user_uuid').val();
  		createObject['batting_order']=$(this).find('#batting_order').val();
  		createObject['bowling_order']=$(this).find('#bowling_order').val();
  		createObject['roles']=$(this).find('#user_roles').val();
  		createArr[i]=createObject;
  		i++;
  	});
  	$("#players").val(JSON.stringify(createArr));
}
$(document).ready(function(){
	<% if (typeof contentObj._id !== 'undefined' && contentObj._id !== null) { %>
		load_data();
	<% } %>
	
	loadPlayers();
	
	load_player_types();
	
		// validate form on keyup and submit
		$("#contentForm").validate({
			ignore: "",
			onkeyup: false,
			errorClass: 'error',
			validClass: 'valid',
			errorElement: "em",
			errorPlacement: function(error, element) {
				$(element).closest('div').append(error);
			},
			onfocusout: false,
			invalidHandler: function(form, validator) {
				var errors = validator.numberOfInvalids();
				if (errors) {                    
					validator.errorList[0].element.focus();
				}
			},
			rules: {
				name: { required: true },
				code: { required: true }
			},
			submitHandler: function(form) {
				generateObjectJson();
				
 				dataAsJson('contentForm', form);
 			}
		});	
});
function removeItem(e){
	$("#tr_"+e).remove();
}
function generate_code(name,code){
	var val=document.getElementById(name).value;
	var patt=/[^A-Za-z0-9_-]/g;
	var result=val.replace(patt,' ');
	result=result.replace(/\s+/g, ' ');
	result = result.replace(/^\s+|\s+$/g,'');
	result=result.replace(/\s/g, '-');
	result=result.toLowerCase();
	document.getElementById(code).value=result;
}

	function load_player_types(){
		loadDefinedPlayertypes= new Array();
		var jsonRow=backendDirectory+"/api_fetch_list?limit=all&collection=player_types",
		xhrStatus=$.getJSON(jsonRow,function(html){
			if(html.error){
				//
			}else{
				$.each(html.aaData, function(i,row){
					loadDefinedPlayertypes.push(row.name);
				});
			}
		});
	}	
	function generate_code(passStr){
		var val=passStr;
		var patt=/[^A-Za-z0-9_-]/g;
		var result=val.replace(patt,' ');
		result=result.replace(/\s+/g, ' ');
		result = result.replace(/^\s+|\s+$/g,'');
		result=result.replace(/\s/g, '-');
		var resultStr=result.toLowerCase();
		return resultStr;
	}
	function generate_new_player_type(val){
		var codeStr=generate_code(val);
    	var postContentURL=backendDirectory+"/api_crud_get";
    	var uuidSystemStr=	"<% if (typeof authenticatedUser.active_system_uuid !== 'undefined' && authenticatedUser.active_system_uuid !== null && authenticatedUser.active_system_uuid !== "") {	 %><%= authenticatedUser.active_system_uuid %><% } %>";
		$.ajax({
			type: "GET",
			dataType: "json",
			url: postContentURL,
			data: {"collection" : "player_types", "action" : "create", "fieldName" : "code", "fieldValue" : codeStr, "name" : val, "code" : codeStr, "user_type_uuid" : $("#player_type_uuid").val(), "uuid_system" : uuidSystemStr},
			success: function(response){
				console.log(response);
			}
		});
	}
	
	function load_data(){
		$(".alert-messages").remove();
		if($("#id").val()!=""){
		var jsonRow=backendDirectory+"/api_fetch_players?start=0&limit=100&s=";
		jsonRow+="&team="+$("#id").val();

		$.getJSON(jsonRow,function(html){
			if(html.error){
				$("#table-breakpoint").before('<div class="alert alert-danger alert-messages">No players in team!</div>');
			}else{
				var existingMembersArr=new Array();
				<% if (typeof contentObj.players !== 'undefined' && contentObj.players !== null  && contentObj.players !== "") {	%>
					var tempselectedSearchArr=<%- JSON.stringify(contentObj.players) %>;
					if(typeof(tempselectedSearchArr)=="object" || typeof(tempselectedSearchArr)=="array"){
						existingMembersArr = tempselectedSearchArr;
					}	else	{
						existingMembersArr = JSON.parse(tempselectedSearchArr);
					}
				<% } %>
								
				var contentHtml="";
				var createNewUsersJson= new Array();
				
				if(html.aaData.length>0){
					$.each(html.aaData, function(i,row){
						var subObject= row;
						var uniqueIDStr=row._id;
						var battingOrderNum=0, bowlingOrderNum=0, row_uuid="", roles= row.player_qualities;
						
						for(var j=0; j<existingMembersArr.length; j++){
							if(uniqueIDStr==existingMembersArr[j].user_mongo_id){
								battingOrderNum = existingMembersArr[j].batting_order;
								if(existingMembersArr[j].bowling_order){
									bowlingOrderNum = existingMembersArr[j].bowling_order;
								}
								row_uuid = existingMembersArr[j].uuid;
								if(existingMembersArr[j].roles){
									roles = existingMembersArr[j].roles;
								}
								break;
							}
						}
						subObject['player_roles']=roles;
						subObject['batting_order']=battingOrderNum;
						subObject['bowling_order']=bowlingOrderNum;
						subObject['team_player_uuid']=row_uuid;
						createNewUsersJson[i]=subObject;
					});
					
					createNewUsersJson.sort(dynamicSort("batting_order"));
					
					$.each(createNewUsersJson, function(i,row){
						var uniqueIDStr=row._id;
						var row_uuid=row.team_player_uuid;
			
						contentHtml+="<tr class='teamsTRClass' id='tr_"+uniqueIDStr+"'>";
						contentHtml+='<td>'+row.firstname+' '+row.lastname+'</td>';
						contentHtml+='<td>'+row.email+'</td>';
						contentHtml+='<td><textarea id="user_roles" class="form-control selected_qualities">'+row.player_roles+'</textarea></td>';
						contentHtml+='<td><input id="batting_order" value="'+row.batting_order+'" class="form-control" type="text"><input type="hidden" id="uuid" value="'+row_uuid+'"><input type="hidden" id="user_uuid" value="'+row._id+'"></td>';
						contentHtml+='<td><input id="bowling_order" value="'+row.bowling_order+'" class="form-control" type="text"></td>';
						contentHtml+='<td class="actions-list"><a href="user?_id='+uniqueIDStr+'" title="View player details" target="_blank"><i class="fa fa-link"></i></a>&nbsp;<a href="javascript:void(0)" onClick="removeItem(\''+uniqueIDStr+'\')" title="Remove"><i class="fa fa-trash"></i></a></td>';
						contentHtml+="</tr>";
						
						
					});
				
					$("#documents_data").append(contentHtml);
					$('.selected_qualities').tagEditor({
						autocomplete: {
       						delay: 0, // show suggestions immediately
        					position: { collision: 'flip' }, // automatic menu position up/down
        					source: loadDefinedPlayertypes
    					},
    					forceLowercase: false,
    					placeholder: 'Add Qualities',
    					beforeTagSave: function(field, editor, tags, tag, val) {
    						if($.inArray( val, loadDefinedPlayertypes)==-1){
    							generate_new_player_type(val);
        					}
    					}
					});
     			}else{
     				$("#documents_data").html("");
					$("#table-breakpoint").before('<div class="alert alert-danger alert-messages">No more records found!</div>');
     			}
			}
			
			//initialize table
			$('#table-breakpoint').basictable({
        		breakpoint: 751
     		});
		});
		}
	}
	
function loadPlayers(){
	$.getJSON("api_fetch_players?start=0&limit=20&s=",function(result){
		var dropdownStr='<option value=""></option>';
		if(result.aaData.length>=1){
			$.each(result.aaData, function(i,row){
				var nameStr=row.firstname;
				if(row.lastname){
					nameStr+=" "+row.lastname;
				}
				dropdownStr+='<option value="'+row._id+'">'+nameStr+'</option>';
			});
		}
		$("#user_id").html(dropdownStr);
		$('.combobox').combobox();
	});	
}


var xhr;
(function( $ ) {
	$.widget( "custom.combobox", {
		_create: function() {
				this.wrapper = $( "<span>" )
				.addClass( "custom-combobox" )
				.insertAfter( this.element );

				this.element.hide();
				this._createAutocomplete();
				this._createShowAllButton();
				},

				_createAutocomplete: function() {
				var ele_select= this.element;
				var selected = this.element.children( ":selected" ),
				value = selected.val() ? selected.text() : "";

				this.input = $( "<input>" )
				.appendTo( this.wrapper )
				.val( value )
				.attr( "title", "" )
				.addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
				.autocomplete({
				delay: 0,
				minLength: 0,
				source: $.proxy( this, "_source" )
				})
				.tooltip({
				tooltipClass: "ui-state-highlight"
				});

				this._on( this.input, {
				autocompleteselect: function( event, ui ) {
				//alert("show all");
				ui.item.option.selected = true;

				this._trigger( "select", event, {
				  item: ui.item.option
				});
				
				ele_select.trigger('change');
					
				},

				autocompletechange: "_removeIfInvalid"
				});
				},

				_createShowAllButton: function() {
				var input = this.input,
				wasOpen = false;

				$( "<a>" )
				.attr( "tabIndex", -1 )
				.attr( "title", "Show All Items" )
				.tooltip()
				.appendTo( this.wrapper )
				.button({
				icons: {
				  primary: "ui-icon-triangle-1-s"
				},
				text: false
				})
				.removeClass( "ui-corner-all" )
				.addClass( "custom-combobox-toggle ui-corner-right" )
				.mousedown(function() {
				wasOpen = input.autocomplete( "widget" ).is( ":visible" );
				})
				.click(function() {
				input.focus();

				// Close if already visible
				if ( wasOpen ) {
				  return;
				}

				// Pass last search string as value to search for, displaying last results
				input.autocomplete( "search", 'SHOWALL' );
				});
				},

				_source: function( request, response ) {
				//var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
				var ele_select= this.element;
				if(request.term=='SHOWALL'){
				response(ele_select.children( "option" ).map(function() {
				var text = $( this ).text();
				var value= $( this ).val();
				//if ( this.value && ( !request.term || matcher.test(text) ) )
				return {
				  label: text,
				  value: text,
				  option: this
				};
				}) );

				}
				else
				{
				
				var jsonRow = '<%= backendDirectory %>/api_fetch_players?start=0&limit=20&s='+request.term;
				
				if(xhr) xhr.abort();
				xhr=$.getJSON(jsonRow,function(result){
					
				if(result.error){
					var html='<option value=""></option>';
					ele_select.html(html);
					response(ele_select.children( "option" ).map(function() {
					var text = $( this ).text();
					var value= $( this ).val();
					//if ( this.value && ( !request.term || matcher.test(text) ) )
					return {
				  		label: text,
				  		value: text,
				  		option: this
					};
					}) );
				}else{
					var html='<option value=""></option>';
					if(result.aaData.length>=1){
						$.each(result.aaData, function(i,row){
							var nameStr=row.firstname;
							if(row.lastname){
								nameStr+=" "+row.lastname;
							}
							html+='<option value="'+row._id+'">'+nameStr+'</option>';
						});
					}
					
					ele_select.html(html);
					
					
					response(ele_select.children( "option" ).map(function() {
				var text = $( this ).text();
				var value= $( this ).val();
				//if ( this.value && ( !request.term || matcher.test(text) ) )
				return {
				  label: text,
				  value: text,
				  option: this
				};
				}) );
					
					
				}
				});

				} 

				},

				_removeIfInvalid: function( event, ui ) {

					// Selected an item, nothing to do
					if ( ui.item ) {

					return;
					}

					// Search for a match (case-insensitive)
					var value = this.input.val(),
					valueLowerCase = value.toLowerCase(),
					valid = false;
					var ele_select= this.element;
					this.element.children( "option" ).each(function() {
					if ( $( this ).text().toLowerCase() === valueLowerCase ) {
						this.selected = valid = true;	
						
						ele_select.trigger('change');

						return false;
					}
					});

					// Found a match, nothing to do
					if ( valid ) {
					return;
					}

					// Remove invalid value
					this.input
					.val( "" )
					.attr( "title", value + " didn't match any item" )
					.tooltip( "open" );
					this.element.val( "" );
					this._delay(function() {
					this.input.tooltip( "close" ).attr( "title", "" );
					}, 2500 );
					this.input.data( "ui-autocomplete" ).term = "";
				},

				_destroy: function() {
					this.wrapper.remove();
					this.element.show();
				}
			});
			})( jQuery );
</script>
</body>
</html>